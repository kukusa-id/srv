{{define "tlsbase"}}
  {{ if eq (env "SRV_ENV") "production" }}
      tls:
        certresolver: cfresolver
  {{end}}
{{end}}

http:
  routers:
    cdn:
      rule: Host(`cdn.{{env "BASE_DOMAIN"}}`)
      service: cdn
      {{template "tlsbase"}}
    cdn-console:
      rule: Host(`cdn-console.{{env "BASE_DOMAIN"}}`)
      service: cdn-console
      {{template "tlsbase"}}
    app-backend:
      rule: Host(`backend.{{env "BASE_DOMAIN"}}`)
      service: app-backend
      {{template "tlsbase"}}
    supabase-studio:
      rule: Host(`supabase-studio.{{env "BASE_DOMAIN"}}`)
      service: supabase-studio
      {{template "tlsbase"}}
    supabase-storage:
      rule: Host(`storage.{{env "BASE_DOMAIN"}}`)
      service: supabase-storage
      {{template "tlsbase"}}

  services:
    cdn:
      loadBalancer:
        servers:
          - url: "http://minio:9000"
    cdn-console:
      loadBalancer:
        servers:
          - url: "http://minio:9090"
    app-backend:
      loadBalancer:
        servers:
          - url: "http://app-backend:80"
    supabase-studio:
      loadBalancer:
        servers:
          - url: "http://supabase-kong:8000"
    supabase-storage:
      loadBalancer:
        servers:
          - url: "http://supabase-storage:5000"